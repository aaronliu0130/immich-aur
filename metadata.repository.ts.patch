--- server/src/infra/repositories/metadata.repository.ts	2023-12-01 08:09:16.768871873 +0000
+++ server/src/infra/repositories/metadata.repository.ts-patched	2023-12-01 08:12:09.931850235 +0000
@@ -35,7 +35,7 @@
 
   async init(): Promise<void> {
     this.logger.log('Initializing metadata repository');
-    const geodataDate = await readFile('/usr/src/resources/geodata-date.txt', 'utf8');
+    const geodataDate = await readFile('/var/lib/immich-revgeo/geodata-date.txt', 'utf8');
 
     await this.geodataPlacesRepository.query('SELECT pg_advisory_lock($1)', [DatabaseLock.GeodataImport]);
 
@@ -117,7 +117,7 @@
           admin2Code: lineSplit[11],
           modificationDate: lineSplit[18],
         }),
-      `/usr/src/resources/${CITIES_FILE}`,
+      `/var/lib/immich-revgeo/${CITIES_FILE}`,
       GeodataPlacesEntity,
     );
   }
@@ -130,7 +130,7 @@
           key: lineSplit[0],
           name: lineSplit[1],
         }),
-      '/usr/src/resources/admin1CodesASCII.txt',
+      '/var/lib/immich-revgeo/admin1CodesASCII.txt',
       GeodataAdmin1Entity,
     );
   }
@@ -143,7 +143,7 @@
           key: lineSplit[0],
           name: lineSplit[1],
         }),
-      '/usr/src/resources/admin2Codes.txt',
+      '/var/lib/immich-revgeo/admin2Codes.txt',
       GeodataAdmin2Entity,
     );
   }
