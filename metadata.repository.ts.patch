--- server/src/infra/repositories/metadata.repository.ts	2023-12-17 18:05:52.228083462 +0000
+++ /tmp/metadata.repository.ts_patched	2023-12-17 18:09:14.092208170 +0000
@@ -37,7 +37,7 @@
   @RequireLock(DatabaseLock.GeodataImport)
   async init(): Promise<void> {
     this.logger.log('Initializing metadata repository');
-    const geodataDate = await readFile('/usr/src/resources/geodata-date.txt', 'utf8');
+    const geodataDate = await readFile('/var/lib/immich-revgeo/geodata-date.txt', 'utf8');
 
     const geocodingMetadata = await this.systemMetadataRepository.get(SystemMetadataKey.REVERSE_GEOCODING_STATE);
 
@@ -115,7 +115,7 @@
           admin2Code: lineSplit[11],
           modificationDate: lineSplit[18],
         }),
-      `/usr/src/resources/${CITIES_FILE}`,
+      `/var/lib/immich-revgeo/${CITIES_FILE}`,
       GeodataPlacesEntity,
     );
   }
@@ -128,7 +128,7 @@
           key: lineSplit[0],
           name: lineSplit[1],
         }),
-      '/usr/src/resources/admin1CodesASCII.txt',
+      '/var/lib/immich-revgeo/admin1CodesASCII.txt',
       GeodataAdmin1Entity,
     );
   }
@@ -141,7 +141,7 @@
           key: lineSplit[0],
           name: lineSplit[1],
         }),
-      '/usr/src/resources/admin2Codes.txt',
+      '/var/lib/immich-revgeo/admin2Codes.txt',
       GeodataAdmin2Entity,
     );
   }
